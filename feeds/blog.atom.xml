<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Kane Data - Blog</title><link href="https://dkane.net/" rel="alternate"></link><link href="/feeds/blog.atom.xml" rel="self"></link><id>https://dkane.net/</id><updated>2022-12-06T15:08:59+00:00</updated><entry><title>Where to find geographic boundaries for the UK</title><link href="https://dkane.net/2022/where-to-find-geographic-boundaries-for-the-uk/" rel="alternate"></link><published>2022-12-06T15:08:59+00:00</published><updated>2022-12-06T15:08:59+00:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2022-12-06:/2022/where-to-find-geographic-boundaries-for-the-uk/</id><summary type="html">&lt;p&gt;Geographic boundary data is a requirement for any geographic analysis or map-making.
But finding boundary data is &lt;a href="https://twitter.com/mapstack_io/status/1600142044986372097"&gt;often a nightmare&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This is a problem I've faced too, so I thought it might be useful to outline some of the places to look for boundary data:&lt;/p&gt;
&lt;h2 id="ons-open-geography-portal"&gt;&lt;a href="https://geoportal.statistics.gov.uk/"&gt;ONS Open Geography Portal&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Geographic boundary data is a requirement for any geographic analysis or map-making.
But finding boundary data is &lt;a href="https://twitter.com/mapstack_io/status/1600142044986372097"&gt;often a nightmare&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This is a problem I've faced too, so I thought it might be useful to outline some of the places to look for boundary data:&lt;/p&gt;
&lt;h2 id="ons-open-geography-portal"&gt;&lt;a href="https://geoportal.statistics.gov.uk/"&gt;ONS Open Geography Portal&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This site - which leaves a lot to be desired in terms of usability &amp;amp; reliability&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; - is the main place the ONS 
shares their boundary data. What it lacks in user experience it makes up for in breadth and depth - there are 
a range of boundaries across lots of different types of area, and with a variety of different variations to download.&lt;/p&gt;
&lt;p&gt;For a given boundary, there are usually four or five different versions with different resolution. The lower resolution files 
are generally smaller, but will produce simplified versions of the boundaries rather than the exact boundaries.
The more generalised versions are better for things like chloropleth maps where you're comparing lots of different areas,
and don't need the boundaries to be exactly right. The exact versions are better for when you show just one area in 
a lot of detail.&lt;/p&gt;
&lt;p&gt;The different versions included are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full resolution - extent of the realm&lt;/li&gt;
&lt;li&gt;Full resolution - clipped to the coastline&lt;/li&gt;
&lt;li&gt;Generalised (20m)&lt;/li&gt;
&lt;li&gt;Super generalised (200m)&lt;/li&gt;
&lt;li&gt;Ultra generalised (500m)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The "extent of the realm" files include some offshore islands and use the mean low water mark, all the other files use the mean high water mark as a boundary.&lt;/p&gt;
&lt;p&gt;Most boundaries can be downloaded in GeoJSON format - you can also get KML, Shapefile or other formats. &lt;/p&gt;
&lt;p&gt;One helpful thing the geoportal provides is historic versions - so if you've used local authority data from 2015 you can get a file that includes local authorities that were active at that time.&lt;/p&gt;
&lt;h2 id="ordance-survey-boundary-line"&gt;&lt;a href="https://www.ordnancesurvey.co.uk/business-government/products/boundaryline"&gt;Ordance Survey Boundary-Line&lt;/a&gt;&lt;/h2&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img alt="A snippet of boundary-line from Newcaster" src="/images/boundaries/boundaryline-newcastle.jpg"&gt;&lt;/p&gt;
&lt;figcaption&gt;Image &amp;copy; Ordnance Survey&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Part of the OS's Open Data products, the Boundary-Line product contains a range of administrative boundaries across Great Britain. The boundaries it includes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Civil parishes&lt;/li&gt;
&lt;li&gt;Wards&lt;/li&gt;
&lt;li&gt;Communities&lt;/li&gt;
&lt;li&gt;Districts&lt;/li&gt;
&lt;li&gt;Counties&lt;/li&gt;
&lt;li&gt;Metropolitan districts&lt;/li&gt;
&lt;li&gt;Unitary authorities&lt;/li&gt;
&lt;li&gt;Parliamentary constituencies&lt;/li&gt;
&lt;li&gt;Electoral divisions&lt;/li&gt;
&lt;li&gt;London boroughs&lt;/li&gt;
&lt;li&gt;Greater London authorities&lt;/li&gt;
&lt;li&gt;Greater London authority assembly constituencies&lt;/li&gt;
&lt;li&gt;European electoral regions&lt;/li&gt;
&lt;li&gt;Welsh assembly constituencies&lt;/li&gt;
&lt;li&gt;Welsh assembly electoral regions&lt;/li&gt;
&lt;li&gt;Scottish parliamentary constituencies&lt;/li&gt;
&lt;li&gt;Scottish parliamentary electoral regions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that it doesn't include ONS-specific statistic geography like Lower Super Output Areas and Middle Super Output Areas. There's lots of other boundary types that aren't included either - like health geography.&lt;/p&gt;
&lt;p&gt;A direct link to &lt;a href="https://osdatahub.os.uk/downloads/open/BoundaryLine"&gt;download Boundary-Line can be found on the OS Data Hub&lt;/a&gt;. You can get it in a few different formats - GeoPackage is probably the most versatile. It's quite a big file - over 600Mb - and you'll probably need some specialist GIS software (like &lt;a href="https://qgis.org/"&gt;QGIS&lt;/a&gt;) to use it.&lt;/p&gt;
&lt;p&gt;The data is available under the Open Government Licence, so you can use it for any purpose.&lt;/p&gt;
&lt;h2 id="geolookups-by-david-kane"&gt;&lt;a href="https://github.com/drkane/geo-lookups/tree/master/boundaries"&gt;Geolookups by David Kane&lt;/a&gt;&lt;/h2&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img alt="A map of the Lower Super Output Areas in Cambridgeshire and Peterborough" src="/images/boundaries/geolookup.png"&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;p&gt;This is a repository of boundaries that I've put together, using data from the ONS geoportal. &lt;/p&gt;
&lt;p&gt;The aim of this is to produce 3 GeoJSON files for each Local Authority, Combined Authority or Region. Each file shows the boundaries of
either Lower Super Output Areas (LSOA), Middle Super Output Areas (MSOA) or Wards within that area. They're meant to help people
who want to map data in a small area. They use a fairly high resolution so you can pick out detail in the areas.&lt;/p&gt;
&lt;p&gt;If you want to combile GeoJSON files together into one file, you can use my &lt;a href="https://findthatpostcode.uk/tools/merge-geojson"&gt;GeoJSON Merge Tool&lt;/a&gt;. &lt;/p&gt;
&lt;h2 id="other-resources"&gt;Other Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bothness.github.io/geo-draw/"&gt;&lt;strong&gt;Draw your own geography&lt;/strong&gt;&lt;/a&gt; - A nice site that allows you to download a set of output areas based on either drawing on the map or choosing an existing area.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://automaticknowledge.co.uk/resources/#UKLocal"&gt;&lt;strong&gt;UK local Authorities with insets&lt;/strong&gt;&lt;/a&gt; - a readymade UK map with insets of urban areas. It's worth looking at the rest of the resources on that page - Alasdair Rae's resources are very useful.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://automaticknowledge.org/gb/"&gt;&lt;strong&gt;Local authority GIS data&lt;/strong&gt;&lt;/a&gt; - a set of useful GIS data for Local Authorities in Great Britain. Includes boundaries but also includes roads, surface water, buildings, greenspace, etc - everything you need for making a map. More useful resources from Alasdair.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flourish.studio/examples/"&gt;&lt;strong&gt;Flourish&lt;/strong&gt;&lt;/a&gt; - this is a great tool for making lots of different types of visualisations, and their mapping visualisation has lots of UK boundaries already available. You can also upload GeoJSON files from other sources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mapit.mysociety.org/"&gt;&lt;strong&gt;MapIt&lt;/strong&gt;&lt;/a&gt; by MySociety and &lt;a href="https://findthatpostcode.uk/"&gt;&lt;strong&gt;Find that Postcode&lt;/strong&gt;&lt;/a&gt; by me both allow you to lookup and individual area's GeoJSON boundary and access it through an API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/open-innovations/geography-bits/tree/master/data"&gt;&lt;strong&gt;Open Innovations&lt;/strong&gt;&lt;/a&gt; maintain a collection of GeoJSON files for different areas. (Thanks to &lt;a href="https://mastodon.social/@slowe@mastodon.me.uk"&gt;Stuart from OI on mastodon.social&lt;/a&gt; for the suggestion).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="whats-missing"&gt;What's missing?&lt;/h2&gt;
&lt;p&gt;I'd love to hear from you if there are other resources you find useful - I'm sure to have missed some! I'm particularly conscious that lots of the resources cover only either England and Wales or Great Britain, and are harder to find for Northern Ireland.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;The site wasn't working at all when I wrote this blog post!&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Blog"></category></entry><entry><title>What powers charity websites?</title><link href="https://dkane.net/2022/what-powers-charity-websites/" rel="alternate"></link><published>2022-02-09T16:06:00+00:00</published><updated>2022-02-09T16:06:00+00:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2022-02-09:/2022/what-powers-charity-websites/</id><summary type="html">&lt;p&gt;I wanted to understand what technologies charities are using with their websites. What &lt;abbr title="Content Management Systems"&gt;CMSs&lt;/abbr&gt; do they use to create content and layout the sites? What web technologies are they using - to what extent have the embraced the latest tech on their sites? And how well are they complying with some â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I wanted to understand what technologies charities are using with their websites. What &lt;abbr title="Content Management Systems"&gt;CMSs&lt;/abbr&gt; do they use to create content and layout the sites? What web technologies are they using - to what extent have the embraced the latest tech on their sites? And how well are they complying with some of the regulatory requirements for their sites?&lt;/p&gt;
&lt;p&gt;There's lots more detail below, but here's the headlines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nearly half&lt;/strong&gt; of UK charities don't have a website, although larger charities are much more likely to have one&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;At least 10%&lt;/strong&gt; of charity websites don't work at a given moment&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;At least one third&lt;/strong&gt; of charities don't have their charity number on their website&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WordPress&lt;/strong&gt; powers one third of charities' websites&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;jQuery&lt;/strong&gt; is present on 71% of charity websites&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nearly two thirds&lt;/strong&gt; of charities use Google Analytics&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="which-charities-have-websites"&gt;Which charities have websites?&lt;/h2&gt;
&lt;p&gt;I took a random sample of 1,137 charities from the UK, using data from the three UK charity regulators. The sample was based on those charities with a valid website address. I collected 200 random websites for each group of charities in 5 income bands, plus websites for all 137 charities with over Â£100m.&lt;/p&gt;
&lt;p&gt;Only just over half (57%) of UK charities supply a website address to their regulator, although larger organsiations are much more likely to - 84% of charities with more than Â£100,000 annual income have a valid website address.&lt;/p&gt;
&lt;div class="flourish-embed flourish-chart" data-src="visualisation/8655291"&gt;&lt;/div&gt;

&lt;p&gt;I excluded those charities that use a facebook page as their website. 750 charities give a facebook.com address - less than 1% of charities with websites, mainly concentrated in the smaller charities.&lt;/p&gt;
&lt;h2 id="do-the-websites-actually-work"&gt;Do the websites actually work?&lt;/h2&gt;
&lt;p&gt;With my sample of charities, I could check which of these actually return a response. Valid responses were received for 82% of charity sites. Of the remainder, 6% returned a "403 Forbidden" response. This suggests that they are aiming to only respond to valid web browser requests, rather than attempts at web scraping (although some of these responses could be because they have given a site address that requires a login).&lt;/p&gt;
&lt;p&gt;The remaining 11% response returned either no response at all, or gave an error of some kind. This was much higher for smaller charities - over 15% of websites for charities under Â£100,000 did not work at all.&lt;/p&gt;
&lt;p&gt;Even for larger charities with income over Â£10m, a worrying proportion of websites just don't work, although some of this may be due to anti-scraping measures.&lt;/p&gt;
&lt;div class="flourish-embed flourish-chart" data-src="visualisation/8655406"&gt;&lt;/div&gt;

&lt;h2 id="do-charities-include-their-charity-number-on-their-website"&gt;Do charities include their charity number on their website?&lt;/h2&gt;
&lt;p&gt;Charities should &lt;a href="https://www.wrighthassall.co.uk/knowledge-base/guide-to-advertising-charitable-status-on-all-written-materials"&gt;display their charity number&lt;/a&gt; on their website, so that members of the public can see that they are regulated as a charity.&lt;/p&gt;
&lt;p&gt;Most charities complied with this, but a significant minority (40% of the working websites checked), don't have their registered charity number on their website. There are some caveats to this - I only checked the HTML of the website homepage, so if a site is entirely powered by javascript then I won't pick up the content of the page as a real user might see it. But I think it's a reasonable estimate.&lt;/p&gt;
&lt;p&gt;And although larger charities do slightly better at having their charity number visible on the website, it's still nearly a quarter of the largest charities with incomes over Â£10m that don't.&lt;/p&gt;
&lt;div class="flourish-embed flourish-chart" data-src="visualisation/8655836"&gt;&lt;/div&gt;

&lt;h2 id="what-content-management-systems-do-charities-use"&gt;What Content Management Systems do charities use?&lt;/h2&gt;
&lt;p&gt;I did some keyword searching of the website homepage to try and detect which content management system (CMS) the website uses. For example, if I found the text &lt;code&gt;wp-content&lt;/code&gt; in the HTML of the homepage, that's a good indication that they are using WordPress.&lt;/p&gt;
&lt;p&gt;These keywords aren't perfect - I detected the CMS for about 58% of websites. Larger charities were harder to detect the CMS - they are more likely to use a custom CMS, or one that isn't easily revealed through the HTML.&lt;/p&gt;
&lt;p&gt;WordPress was the most popular CMS, powering 36% of sites. This is followed by Drupal, which powered 9% of sites. WordPress is more commonly used by smaller charities, where Drupal is more popular with larger ones.&lt;/p&gt;
&lt;div class="flourish-embed flourish-chart" data-src="visualisation/8606184"&gt;&lt;/div&gt;

&lt;h2 id="which-web-technologies-do-charities-use"&gt;Which web technologies do charities use?&lt;/h2&gt;
&lt;p&gt;I also searched the HTML text for a set of web technologies that could be present on pages. This was a fairly arbritrary list based on existing knowledge a little bit of checking of some of the responses - so any suggestions for what else to search for would be very useful.&lt;/p&gt;
&lt;p&gt;The tools I looked for, and the proportion of sites that appeared to use the tool, were:&lt;/p&gt;
&lt;h3 id="web-technologies-and-javascriptcss-frameworks"&gt;Web technologies and JavaScript/CSS frameworks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;site claims to be in HTML5 (&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt; - &lt;strong&gt;91%&lt;/strong&gt; of sites)&lt;/li&gt;
&lt;li&gt;uses jQuery (&lt;strong&gt;71%&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;uses Google fonts (&lt;strong&gt;44%&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;uses Bootstrap CSS framework (&lt;strong&gt;13%&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;uses React JS framework (&lt;strong&gt;6%&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="analytics-and-social-media"&gt;Analytics and social media&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mentions cookies - potentially a proxy for whether a cookie popup is shown (&lt;strong&gt;72%&lt;/strong&gt; of sites)&lt;/li&gt;
&lt;li&gt;Google Analytics is enabled (&lt;strong&gt;62%&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Twitter cards or Open Graph metadata available (&lt;strong&gt;62%&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Facebook tracking enabled (&lt;strong&gt;14%&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="assistive-technology"&gt;Assistive technology&lt;/h2&gt;
&lt;p&gt;Note that these are pretty poor proxies for how accessible a website is for a range of users&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Includes &lt;code&gt;alt=&lt;/code&gt; somewhere on the page (could indicate that alt-text is included for some images - &lt;strong&gt;93%&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Includes a &lt;code&gt;aria&lt;/code&gt; property somewhere on the page (&lt;strong&gt;72%&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Uses the browsealoud extension (&lt;strong&gt;1.2%&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As shown below, use of these tools changes based on the size of the charity. Larger charities are more likely to use Google analytics &amp;amp; Facebook tracking, more likely to mention cookies and use Open Graph or Twitter Cards.&lt;/p&gt;
&lt;div class="flourish-embed flourish-chart" data-src="visualisation/8606173"&gt;&lt;/div&gt;

&lt;script src="https://public.flourish.studio/resources/embed.js"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Website"></category></entry><entry><title>How many charity employees have been furloughed?</title><link href="https://dkane.net/2020/how-many-charity-employees-have-been-furloughed/" rel="alternate"></link><published>2020-06-12T16:06:00+01:00</published><updated>2020-06-12T16:06:00+01:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2020-06-12:/2020/how-many-charity-employees-have-been-furloughed/</id><summary type="html">&lt;p&gt;&lt;em&gt;This blog post is a write-up of a &lt;a href="https://twitter.com/kanedr/status/1271395238331011080"&gt;twitter thread&lt;/a&gt;
exploring data available. These are very rough estimates, based on data that's
available at the time of writing.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It's frustratingly difficult to find out how many charities have used the 
government's Coronavirus Job Retention Scheme, or how many employees have â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;This blog post is a write-up of a &lt;a href="https://twitter.com/kanedr/status/1271395238331011080"&gt;twitter thread&lt;/a&gt;
exploring data available. These are very rough estimates, based on data that's
available at the time of writing.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It's frustratingly difficult to find out how many charities have used the 
government's Coronavirus Job Retention Scheme, or how many employees have
been furloughed through it.&lt;/p&gt;
&lt;p&gt;For the rest of the economy, HMRC has &lt;a href="https://www.gov.uk/government/statistics/coronavirus-job-retention-scheme-statistics-june-2020"&gt;produced "experimental statistics"&lt;/a&gt;
with estimates of the number of employers and employees that have used the scheme.
These statistics are based on the data HMRC uses to administer the scheme. As well
as overall totals, they've been able to produce estimates of how use of the scheme
has varied across sectors of the economy (aka "industries", using SIC2007) and 
geography (local authorities and regions).&lt;/p&gt;
&lt;p&gt;Unfortunately it's not possible to directly extract charities from this data - 
charity is a legal form, and charities work in lots of different industries as
classified by SIC2007 - health, arts, social care, education, etc. So the industry
breakdown doesn't allow charities to be identified.&lt;/p&gt;
&lt;h2 id="estimating-using-sector-data"&gt;Estimating using sector data&lt;/h2&gt;
&lt;p&gt;However, even though the industry data doesn't allow us to directly estimate the
numbers of charity employers and employees using the scheme, we can use the
industry breakdowns as a base for some rough estimates. &lt;/p&gt;
&lt;p&gt;If we make the assumption that charities behave similarly to other organisations
in their industry (which may not be true) then if we know the proportion of 
organisations in each industry that are charities, we can apply that proportion
to the number of employers and employees to make and estimate of figures for 
charities.&lt;/p&gt;
&lt;p&gt;But how to get an estimate of the proportion of companies that are charities? Here
I've turned to Companies House and Charity Commission data. Using data extracts from 
these two regulators, it's possible to get a list of companies, their SIC codes (for
their industry) and whether or not they are a registered charity. From this we
can produce a list of industries and the proportion of organisations in each that are
charities.&lt;/p&gt;
&lt;p&gt;But is this a fair picture? Is the number of companies a proxy for the number of
employees? Well possibly, but it's probably more complicated. We know that employees
aren't evenly distributed in any sector of the economy - &lt;a href="https://data.ncvo.org.uk/workforce/#by-size"&gt;NCVO's data shows that 40-50% of 
employees in private &amp;amp; voluntary sector work in organisations with more than 50 employees&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are lots of small charities without paid staff, and similarly there are hundreds
of thousands of small registered companies that don't employ people, or are currently dormant.
To strip these out, I used a field in the company data that describes the type of 
accounts the company last submitted - this is based on their size. But limiting it
to accounts returned by active companies, we get a better sense of the proportion
of "active" companies that are charities. &lt;/p&gt;
&lt;h2 id="results-of-these-estimates"&gt;Results of these estimates&lt;/h2&gt;
&lt;p&gt;The two methods - using all companies and then using larger "active" companies, give
two different figures for the proportion of registered companies that are charities.
For all companies charities represent 0.7% of companies, compared to 2% of "active"
companies. The latter figure perhaps feels instinctively more correct - we know from
NCVO that charity employees are around 3% of the workforce.&lt;/p&gt;
&lt;p&gt;The figures give the proportions for industries. These proportions feel correct - 
charities are concentrated in 4 SIC industries: education (20% of companies), 
health and social work (12% of companies), arts &amp;amp; recreation (12% of companies),
trade union, religious, political and repair (8% of companies). They're also absent
where you would expect - mining, manufacturing and construction show negligible numbers
of charities (the SIC classification system is definitely not perfect in every case).&lt;/p&gt;
&lt;iframe title="% of companies that are charities, by industry" aria-label="Range Plot" id="datawrapper-chart-oCE6u" src="https://datawrapper.dwcdn.net/oCE6u/1/" scrolling="no" frameborder="0" style="border: none;" width="600" height="605"&gt;&lt;/iframe&gt;

&lt;p&gt;And using these proportions we can make estimates of the number of charities that are
using the furlough scheme, and the number of employees. Using the proportions for
all companies gives a figure of 8,000 charities and 69,000 employees, but using just
larger active companies gives &lt;strong&gt;22,000 charities&lt;/strong&gt; and &lt;strong&gt;188,000 employees&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;While there's a number of assumptions going into these figures, I think they feel 
like sensible estimates of the boundaries of the actual number, though the larger one is
perhaps closer to the truth.&lt;/p&gt;
&lt;iframe title="Estimated number of charity employees furloughed" aria-label="Range Plot" id="datawrapper-chart-oX8S0" src="https://datawrapper.dwcdn.net/oX8S0/1/" scrolling="no" frameborder="0" style="border: none;" width="600" height="586"&gt;&lt;/iframe&gt;

&lt;h2 id="comparing-with-survey-results"&gt;Comparing with survey results&lt;/h2&gt;
&lt;p&gt;When I shared these results on Twitter, there were some helpful pointers to attempts
to answer the same questions using surveys.&lt;/p&gt;
&lt;p&gt;Nick Temple of the Social Investment Business estimates that 13% of their customer
base's employees are on furlough.&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Thanks for doing this David; even a rough guess is helpful. Recent analysis of our customer base came up with around 13% of all employees on furlough. Though SIB customer base tends to be medium, rather than small/micro.&lt;/p&gt;&amp;mdash; Nick Temple (@nicktemple1) &lt;a href="https://twitter.com/nicktemple1/status/1271438133473705986?ref_src=twsrc%5Etfw"&gt;June 12, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;Charity Tax Group &amp;amp; Charity Retail suggest that many of the 26,000 charity shop employees
have been furloughed - the unique nature of these employees (similar private businesses
do not have retail employees) means that they are potentially missed from my estimate.&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Based on recent discussions with &lt;a href="https://twitter.com/CharityRetail?ref_src=twsrc%5Etfw"&gt;@CharityRetail&lt;/a&gt; there are 26,000 FTE charity shop employees &amp;amp; many of them have been furloughed. &lt;a href="https://twitter.com/CivilSocietyUK?ref_src=twsrc%5Etfw"&gt;@CivilSocietyUK&lt;/a&gt; estimated 20,000 from the 20 largest charities some time back. Very difficult to be certain though &lt;a href="https://t.co/FZhj3jdC0e"&gt;https://t.co/FZhj3jdC0e&lt;/a&gt;&lt;/p&gt;&amp;mdash; Charity Tax Group (@CharityTaxGroup) &lt;a href="https://twitter.com/CharityTaxGroup/status/1271440561581498370?ref_src=twsrc%5Etfw"&gt;June 12, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;A Charity Tax Group survey showed 70% of respondents had made a claim.&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;This does not provide specific figures but a recent CTG snapshot poll showed high level of take-up organisationally (without specific responses on furloughed staff per charity) &lt;a href="https://t.co/6Z7gxsMeab"&gt;pic.twitter.com/6Z7gxsMeab&lt;/a&gt;&lt;/p&gt;&amp;mdash; Charity Tax Group (@CharityTaxGroup) &lt;a href="https://twitter.com/CharityTaxGroup/status/1271441766068166656?ref_src=twsrc%5Etfw"&gt;June 12, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;66% of respondents to &lt;a href="https://www.probonoeconomics.com/news/pbe-launches-new-survey-understand-impact-covid-19-charity-sector"&gt;Pro Bono Economics&lt;/a&gt; 
survey (9-10 June) said they had furloughed or used job retention scheme.&lt;/p&gt;
&lt;h2 id="what-next"&gt;What next?&lt;/h2&gt;
&lt;p&gt;These estimates are probably wrong. They're based on imperfect data and assumptions that 
are unlikely to be correct. However, given the absence of better data, I think they give
an indication of the scale we would expect to see in figures.&lt;/p&gt;
&lt;p&gt;ONS and HMRC have done a fantastic job during this crisis of producing statistics to
understand the environment and measure responses. But charities can often fall through the 
cracks in official statistics - due to lack of data, or because they're not thought about
when the measures are designed.&lt;/p&gt;
&lt;p&gt;I'd like to see better official data on charities in this crisis, to help the charity 
sector measure the impact and respond. &lt;/p&gt;</content><category term="Blog"></category><category term="Covid19"></category></entry><entry><title>Working with XBRL</title><link href="https://dkane.net/2018/working-with-xbrl/" rel="alternate"></link><published>2018-12-18T11:06:07+00:00</published><updated>2018-12-18T11:06:07+00:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2018-12-18:/2018/working-with-xbrl/</id><summary type="html">&lt;p&gt;Some notes on the XBRL data format, as I've been working with it this week. I'm working with Power to Change to help them extract data from accounts.&lt;/p&gt;
&lt;h2 id="whats-xbrlixbrl"&gt;What's XBRL/iXBRL?&lt;/h2&gt;
&lt;p&gt;XBRL standards for eXtensible Business Reporting Language. iXBRL is the same but "inline". They describe a data standard for â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some notes on the XBRL data format, as I've been working with it this week. I'm working with Power to Change to help them extract data from accounts.&lt;/p&gt;
&lt;h2 id="whats-xbrlixbrl"&gt;What's XBRL/iXBRL?&lt;/h2&gt;
&lt;p&gt;XBRL standards for eXtensible Business Reporting Language. iXBRL is the same but "inline". They describe a data standard for financial reporting, based on XML. In the UK it's used by Companies House and HMRC for reporting - instead of submitting a PDF or paper copy of their accounts (which contains no machine readable version of the data within) companies can (and in some cases must) submit in XBRL format.&lt;/p&gt;
&lt;p&gt;The iXBRL format differs slightly from XBRL in that the machine-readable financial data is contained within a human-readable HTML file. That way you get the best of both words - documents that can be read by people interested in that company, with data that can be extracted in a consistent way.&lt;/p&gt;
&lt;p&gt;That's the theory, anyway.&lt;/p&gt;
&lt;h2 id="whats-in-xbrl"&gt;What's in XBRL?&lt;/h2&gt;
&lt;p&gt;In my mind, XBRL has two main parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The XBRL &lt;strong&gt;format&lt;/strong&gt;, describing how to represent various concepts within an XML or HTML document. The formats for XBRL and iXBRL are slightly different - you should be able to convert an iXBRL document to an XBRL one, but that wouldn't work the other way round.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Schemas&lt;/strong&gt; which are applied on top of the XBRL format to represent financial data in a specific framework - for example the FRS accounting framework or the Charity SORP. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The format describes what the data should look like, while the schema describes what each individual data item refers to. &lt;/p&gt;
&lt;h2 id="how-do-you-make-xbrl"&gt;How do you make XBRL?&lt;/h2&gt;
&lt;p&gt;This isn't a particularly relevant question for me - for this exercise I'm more interested in how to get data out of the documents.&lt;/p&gt;
&lt;p&gt;But I think most XBRL documents are produced by standard accounting packages. There are also specialist firms like &lt;a href="http://ixbrl-assist.co.uk/"&gt;Hypercube Consultancy&lt;/a&gt; who provide tagging services for accounts. Stewart from Hypercube was kind enough to get in touch with me and share his experience of creating and using XBRL and some of the tools and resources out there.&lt;/p&gt;
&lt;h2 id="what-can-you-do-with-xbrl"&gt;What can you do with XBRL?&lt;/h2&gt;
&lt;p&gt;This is what I'm interested in - how do you get data out of XBRL documents. My aim in this is to look for particular values (total assets, for example) and compare them across different organisations. &lt;/p&gt;
&lt;p&gt;This is trickier that I had thought. I had hoped that there would be a nice suite of (open source) tools for parsing and extracting data from XBRL - but as far as I can tell there isn't. I did know from trying beforehand that the flexibility of XBRL and iXBRL means it is very complex to deal with - often the same value can be represented in different ways depending on the choices made.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are some resources out there though:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://uk-taxonomies-tdp.corefiling.com/yeti/resources/yeti-gwt/Yeti.jsp"&gt;Yeti&lt;/a&gt; - a tool created by CoreFiling, who I think were one of the original authors of XBRL. One issue I've had looking at XBRL is navigating the schemas, and this tool makes it much easier to do so.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/XBRLInternational/ixbrl-samples"&gt;Sample iXBRL files&lt;/a&gt; - This seems to be the only github presence of XBRL International who look after the standard, but it's really useful for testing tools.&lt;/li&gt;
&lt;li&gt;Companies House - There's a few ways you can get real-life iXBRL files for companies:&lt;ul&gt;
&lt;li&gt;Via the &lt;a href="https://beta.companieshouse.gov.uk/"&gt;Companies House register&lt;/a&gt; if a company has filed iXBRL accounts they're available for download on the filing history page for that company. Not all companies file iXBRL accounts so if they're not available then PDF copies are instead.&lt;/li&gt;
&lt;li&gt;You can also download accounts in bulk via the &lt;a href="http://download.companieshouse.gov.uk/en_accountsdata.html"&gt;Free Accounts Data Product&lt;/a&gt;. This has daily and monthly dumps of any XBRL or iXBRL accounts filed with Companies House. This is useful for getting accounts to test on.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You can also view the official specifications for the format - I found these very difficult to read and get a sense of what the resulting data looks like:&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.xbrl.org/Specification/XBRL-2.1/REC-2003-12-31/XBRL-2.1-REC-2003-12-31+corrected-errata-2013-02-20.html#_4.7"&gt;XBRL 2.1&lt;/a&gt; - released 2003, corrected in 2013&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.xbrl.org/specification/inlinexbrl-part1/rec-2013-11-18/inlinexbrl-part1-rec-2013-11-18.html"&gt;iXBRL 1.1&lt;/a&gt; - released 2013&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.xbrl.org/Specification/xbrl-csv/PWD-2017-05-02/xbrl-csv-PWD-2017-05-02.html"&gt;xBRL-CSV&lt;/a&gt; - a proposal for converting XBRL to CSV format. I've not seen whether this is implemented anywhere, but this would be very useful for my purposes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="what-have-i-done"&gt;What have I done?&lt;/h2&gt;
&lt;p&gt;As these notes suggest, a lot of what I've done is trying to make sense of the landscape and explore the data. I did most of this through jupyter notebooks, looking through iXBRL files of a selection of community businesses. I've found the python &lt;a href="https://www.crummy.com/software/BeautifulSoup/"&gt;BeautifulSoup&lt;/a&gt; library helpful for parsing the XML.&lt;/p&gt;
&lt;p&gt;Using what I'd learnt from exploring the iXBRL files I've started to put together a python module for parsing iXBRL and extracting the data. I'll be aiming to develop this further, and hopefully use it in anger: &lt;a href="https://github.com/drkane/ixbrl-parse"&gt;https://github.com/drkane/ixbrl-parse&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="who-else-is-doing-things-with-xbrl"&gt;Who else is doing things with XBRL&lt;/h2&gt;
&lt;p&gt;I did a search of GitHub to find XBRL repositories. There were a few people who'd tried to do similar things over the years. But most interestingly, the &lt;a href="https://github.com/ONSBigData/parsing_company_accounts"&gt;ONS Big Data Unit&lt;/a&gt; has an active repository with some code, approaching it in a very similar way to me. I've got in touch with them to see if they want to compare notes.&lt;/p&gt;</content><category term="Blog"></category><category term="XBRL"></category><category term="iXBRL"></category><category term="accounts"></category></entry><entry><title>Text analysis in the voluntary sector</title><link href="https://dkane.net/2018/text-analysis-in-the-voluntary-sector/" rel="alternate"></link><published>2018-11-19T09:58:43+00:00</published><updated>2018-11-19T09:58:43+00:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2018-11-19:/2018/text-analysis-in-the-voluntary-sector/</id><summary type="html">&lt;p&gt;&lt;img alt="Chart from Google n-grams showing results for data and cheese since 1800. Data overtakes cheese in 1970ish" src="/images/data-cheese-chart.png"&gt; &lt;/p&gt;
&lt;p&gt;Last week at the &lt;a href="https://www.data4goodconf.org.uk/"&gt;Data 4 Good event&lt;/a&gt; in Birmingham I gave a talk on the opportunities
and challenges that text analysis offers to the voluntary sector. It was a short lightning
talk so I was only able to give a quick overview of the possibilities, and it's a big â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Chart from Google n-grams showing results for data and cheese since 1800. Data overtakes cheese in 1970ish" src="/images/data-cheese-chart.png"&gt; &lt;/p&gt;
&lt;p&gt;Last week at the &lt;a href="https://www.data4goodconf.org.uk/"&gt;Data 4 Good event&lt;/a&gt; in Birmingham I gave a talk on the opportunities
and challenges that text analysis offers to the voluntary sector. It was a short lightning
talk so I was only able to give a quick overview of the possibilities, and it's a big
area so there's lots more to explore.&lt;/p&gt;
&lt;p&gt;You can find the slides on Google drive.&lt;/p&gt;
&lt;iframe src="https://docs.google.com/presentation/d/e/2PACX-1vTvN-R9g5Dtcr72YKIe5RWSSBRqQlpUmaVpQfRDxd5EIPVzwPmzMPbVGCnJapJPjOMnIqhBCii7Eq30/embed?start=false&amp;loop=false&amp;delayms=3000" frameborder="0" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" style="width:100%;height:389px;"&gt;&lt;/iframe&gt;

&lt;p&gt;In the last slide I suggest some tools you can use to take your data further with text analysis.
They are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://databasic.io/en/samediff/"&gt;&lt;strong&gt;DataBasic â€“ SameDiff&lt;/strong&gt;&lt;/a&gt; - a simple tool for comparing two sets of text&lt;/li&gt;
&lt;li&gt;&lt;a href="https://databasic.io/en/wordcounter/"&gt;&lt;strong&gt;DataBasic â€“ word counter&lt;/strong&gt;&lt;/a&gt; - create word clouds and look in more detail at the frequency of words in a piece of text.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.opencalais.com/opencalais-demo/"&gt;&lt;strong&gt;Reuters OpenCalais&lt;/strong&gt;&lt;/a&gt; - a proprietary tool for getting started with entity recognition. I'd be interested to know if there are any similar open-source projects - one I've seen is &lt;a href="https://spacy.io/usage/spacy-101#annotations-ner"&gt;spacy&lt;/a&gt; but it requires some programming knowledge to use.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openrefine.org/"&gt;&lt;strong&gt;OpenRefine&lt;/strong&gt;&lt;/a&gt; - a useful data wrangling tool with lots of useful features for working with text.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="Text analysis"></category></entry><entry><title>Grants in Kingston</title><link href="https://dkane.net/2018/grants-in-kingston/" rel="alternate"></link><published>2018-06-14T12:57:19+01:00</published><updated>2018-06-14T12:57:19+01:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2018-06-14:/2018/grants-in-kingston/</id><summary type="html">&lt;p&gt;On Tuesday I was lucky enough to take part in a Kingston "Data Day", organised
by the fantastic &lt;a href="https://superhighways.org.uk/"&gt;Superhighways&lt;/a&gt; and 
&lt;a href="https://kva.org.uk/"&gt;Kingston Voluntary Action&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The aim of the day was to showcase some of the work that charities in Kingston 
are already doing to use data in their work, and see â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;On Tuesday I was lucky enough to take part in a Kingston "Data Day", organised
by the fantastic &lt;a href="https://superhighways.org.uk/"&gt;Superhighways&lt;/a&gt; and 
&lt;a href="https://kva.org.uk/"&gt;Kingston Voluntary Action&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The aim of the day was to showcase some of the work that charities in Kingston 
are already doing to use data in their work, and see some of the tools and 
resources out there. We heard from charities like &lt;a href="https://www.leah.org.uk/"&gt;LEAH&lt;/a&gt;,
&lt;a href="https://www.manandboy.org/"&gt;Man and Boy&lt;/a&gt; and &lt;a href="https://kingstoncarers.org.uk/young-carers/"&gt;Kingston Young Carers&lt;/a&gt;
about how they were using data to measure outcomes and improve their services. We
also heard from &lt;a href="https://data.kingston.gov.uk/"&gt;Kingston Borough Council&lt;/a&gt;, 360 Giving and others on resources out
there that local charities could tap into.&lt;/p&gt;
&lt;p&gt;I gave a quick presentation on what the 360 Giving data on grants tells us
about voluntary sector funding in Kingston. Here's a few things I took away
from the data:&lt;/p&gt;
&lt;h2 id="1-grants-to-kingston-are-lower-than-other-areas"&gt;1. Grants to Kingston are lower than other areas&lt;/h2&gt;
&lt;p&gt;I didn't actually produce any comparisons for Kingston and other London
boroughs, but in Katherine from 360 Giving's presentation she showed that
looking at the Grantnav 360 Giving data, Kingston comes right at the bottom
of the table in terms of the number of grants made. &lt;/p&gt;
&lt;p&gt;You can see this for yourself when looking at a &lt;a href="http://grantnav.threesixtygiving.org/search?page=1&amp;amp;json_query=%7B%22extra_context%22%3A+%7B%22amountAwardedFixed_facet_size%22%3A+3%2C+%22awardYear_facet_size%22%3A+3%7D%2C+%22sort%22%3A+%7B%22_score%22%3A+%7B%22order%22%3A+%22desc%22%7D%7D%2C+%22aggs%22%3A+%7B%22recipientOrganization%22%3A+%7B%22terms%22%3A+%7B%22field%22%3A+%22recipientOrganization.id_and_name%22%2C+%22size%22%3A+3%7D%7D%2C+%22fundingOrganization%22%3A+%7B%22terms%22%3A+%7B%22field%22%3A+%22fundingOrganization.id_and_name%22%2C+%22size%22%3A+3%7D%7D%2C+%22currency%22%3A+%7B%22terms%22%3A+%7B%22field%22%3A+%22currency%22%2C+%22size%22%3A+3%7D%7D%2C+%22recipientRegionName%22%3A+%7B%22terms%22%3A+%7B%22field%22%3A+%22recipientRegionName%22%2C+%22size%22%3A+3%7D%7D%2C+%22recipientDistrictName%22%3A+%7B%22terms%22%3A+%7B%22field%22%3A+%22recipientDistrictName%22%2C+%22size%22%3A+50%7D%7D%7D%2C+%22query%22%3A+%7B%22bool%22%3A+%7B%22filter%22%3A+%5B%7B%22bool%22%3A+%7B%22should%22%3A+%5B%5D%7D%7D%2C+%7B%22bool%22%3A+%7B%22should%22%3A+%5B%5D%7D%7D%2C+%7B%22bool%22%3A+%7B%22should%22%3A+%5B%5D%2C+%22must%22%3A+%7B%7D%7D%7D%2C+%7B%22bool%22%3A+%7B%22should%22%3A+%7B%22range%22%3A+%7B%22amountAwarded%22%3A+%7B%7D%7D%7D%2C+%22must%22%3A+%7B%7D%7D%7D%2C+%7B%22bool%22%3A+%7B%22should%22%3A+%5B%5D%7D%7D%2C+%7B%22bool%22%3A+%7B%22should%22%3A+%5B%5D%7D%7D%2C+%7B%22bool%22%3A+%7B%22should%22%3A+%5B%5D%7D%7D%2C+%7B%22bool%22%3A+%7B%22should%22%3A+%5B%5D%7D%7D%5D%2C+%22must%22%3A+%7B%22query_string%22%3A+%7B%22query%22%3A+%22London%22%2C+%22default_field%22%3A+%22recipientLocation%22%7D%7D%7D%7D%7D&amp;amp;page_y=684"&gt;list of all the grants to London&lt;/a&gt;
(see the "Recipient District" filter on the left hand side for counts in each Borough).&lt;/p&gt;
&lt;h2 id="2-the-big-lottery-fund-is-important-to-the-area"&gt;2. The Big Lottery Fund is important to the area&lt;/h2&gt;
&lt;p&gt;The Big Lottery Fund is by far the largest funder that has published 360 Giving
data, and this shows in Kingston. Half of the grant amount received by organisations
in the borough comes from Big Lottery Fund.&lt;/p&gt;
&lt;h2 id="3-but-other-funders-play-important-roles"&gt;3. But other funders play important roles&lt;/h2&gt;
&lt;p&gt;Funders like the Co-operative Group, Sports England and Kingston Voluntary Action
(through the &lt;a href="https://www.lovekingston.org.uk/"&gt;Love Kingston&lt;/a&gt; programme) also provide key funding, particularly
to smaller groups.&lt;/p&gt;
&lt;h2 id="4-grants-are-going-to-medium-sized-groups"&gt;4. Grants are going to medium-sized groups&lt;/h2&gt;
&lt;p&gt;Most grants that we found are going to organisations with between Â£100,000 and Â£1m
annual income. These organisations provide vital services in the local area, but
there could be scope for increasing the funding available for smaller groups.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I've created a map of all the grants to Kingston that is embedded below:&lt;/p&gt;
&lt;figure&gt;
&lt;iframe src="/data/kingston-grants-map.html" width="100%" height="500" frameborder="0"&gt;&lt;/iframe&gt;
&lt;/figure&gt;

&lt;p&gt;You can also find my presentation on Google slides:&lt;/p&gt;
&lt;figure&gt;
&lt;iframe src="https://docs.google.com/presentation/d/e/2PACX-1vTaYI58fQlEc2pY66Y_3Y9MEUMpYUEw-cCTDHI6vYtIWhpt8hTO3dqXgjx7XY6urIzarSIrozhgVeDJ/embed?start=false&amp;loop=false&amp;delayms=3000" frameborder="0" width="100%" height="500" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"&gt;&lt;/iframe&gt;
&lt;/figure&gt;

&lt;p&gt;Finally you can also download the full dataset to use yourself:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/data/all_kingston_grants.csv"&gt;Kingston grants data [CSV - 263Kb]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This data is released under the &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons Attribution Sharealike license (CC-BY-SA)&lt;/a&gt; in accordance with
the terms under which the data was used from GrantNav.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="acknowledgements-and-data-licensing"&gt;Acknowledgements and data licensing&lt;/h3&gt;
&lt;p&gt;All data has been used under the license applied by the data publisher. 
&lt;a href="http://grantnav.threesixtygiving.org/datasets/#copyright"&gt;A list of the licenses used&lt;/a&gt; can be found on GrantNav.&lt;/p&gt;
&lt;p&gt;Contains data from &lt;a href="http://grantnav.threesixtygiving.org/datasets/"&gt;GrantNav&lt;/a&gt; a &lt;a href="http://www.threesixtygiving.org/"&gt;360Giving&lt;/a&gt; application released under the terms of the &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons Attribution Sharealike license (CC-BY-SA)&lt;/a&gt;&lt;/p&gt;</content><category term="Blog"></category><category term="Grants"></category><category term="Kingston"></category></entry><entry><title>Adding charity details using findthatcharity - Part II</title><link href="https://dkane.net/2018/adding-charity-details-using-findthatcharity-part-ii/" rel="alternate"></link><published>2018-03-31T13:25:00+01:00</published><updated>2018-03-31T13:25:00+01:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2018-03-31:/2018/adding-charity-details-using-findthatcharity-part-ii/</id><summary type="html">&lt;p&gt;&lt;a href="/2018/adding-charity-details-using-findthatcharityuk-part-i/"&gt;...continued from part 1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="part-ii-add-charity-details"&gt;Part II - add charity details&lt;/h2&gt;
&lt;p&gt;Once you've got a list of organisations in OpenRefine with charity numbers you
can then add more details about the organisations using &lt;a href="https://findthatcharity.uk/"&gt;findthatcharity.uk&lt;/a&gt;.
You can add:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;postcode&lt;/li&gt;
&lt;li&gt;website&lt;/li&gt;
&lt;li&gt;latest income&lt;/li&gt;
&lt;li&gt;link to Charity Commission register&lt;/li&gt;
&lt;li&gt;date registered/removed&lt;/li&gt;
&lt;li&gt;Company Number â€¦&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;a href="/2018/adding-charity-details-using-findthatcharityuk-part-i/"&gt;...continued from part 1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="part-ii-add-charity-details"&gt;Part II - add charity details&lt;/h2&gt;
&lt;p&gt;Once you've got a list of organisations in OpenRefine with charity numbers you
can then add more details about the organisations using &lt;a href="https://findthatcharity.uk/"&gt;findthatcharity.uk&lt;/a&gt;.
You can add:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;postcode&lt;/li&gt;
&lt;li&gt;website&lt;/li&gt;
&lt;li&gt;latest income&lt;/li&gt;
&lt;li&gt;link to Charity Commission register&lt;/li&gt;
&lt;li&gt;date registered/removed&lt;/li&gt;
&lt;li&gt;Company Number&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="1-fetch-json-data"&gt;1: Fetch JSON data&lt;/h3&gt;
&lt;p&gt;First you fetch data from the findthatcharity page for that charity. We'll be getting
the data in "JSON" format - this means we can get the fields we need out of the data.&lt;/p&gt;
&lt;p&gt;To fetch the data, click the arrow menu next to the column with the charity numbers and
select &lt;code&gt;Edit Column &amp;gt; Add column by fetching URLs...&lt;/code&gt;. &lt;/p&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img alt="Screenshot of OpenRefine option for adding column based on an url" src="/images/reconcile/add-column-by-url.png"&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;p&gt;In the resulting dialog you need to add a formula which will create the URL that needs
to be fetched. This means adding the charity number value into a template. The formula
you need is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;https://findthatcharity.uk/charity/&amp;quot; + value + &amp;quot;.json&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make sure you include the quotation marks in the correct place. Add a new column name
(something like "Charity Details"). The "Throttle delay" setting helps to lessen the
load on the site being fetched from - the default value is 5000 milliseconds (5 seconds).
Findthat charity can cope with more requests than that (within reason!) So I'll generally
set it to 50-100 milliseconds, which works out as between 10 and 20 requests per second.&lt;/p&gt;
&lt;p&gt;The resulting dialog should look something like the following. You'll see a preview of the
url which should look sensible. You can test that the URL is correct by visiting one of the
preview URLs. You'll also see that columns with a &lt;code&gt;null&lt;/code&gt; value also produce a &lt;code&gt;null&lt;/code&gt; URL
so won't be fetched.&lt;/p&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img alt="Preview of the Add column by fetching from URL dialog" src="/images/reconcile/add-column-dialog.png"&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;h3 id="2-extract-details-from-the-json-data"&gt;2. Extract details from the JSON data&lt;/h3&gt;
&lt;p&gt;You should see a new column filled with JSON data - it looks very hard to read, but all the 
data we'll looking for. You'll need to get OpenRefine to look through this data and extract
the fields you're looking for.&lt;/p&gt;
&lt;p&gt;I'll demo this with the &lt;code&gt;latestincome&lt;/code&gt; and &lt;code&gt;company number&lt;/code&gt; fields, but the same principle
can be used to extract anything from the data.&lt;/p&gt;
&lt;p&gt;Use the arrow menu next to the new column, and then select &lt;code&gt;Edit Column &amp;gt; Add column based on this column...&lt;/code&gt;
Again, we'll enter a formula to parse the JSON and find the right value within. We're using
the &lt;code&gt;parseJson&lt;/code&gt; OpenRefine function. Enter the following formula:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;parseJson(value)[&amp;quot;latest_income&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enter a name for the column and press OK to add it.&lt;/p&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img alt="Dialog for adding a new column by parsing JSON" src="/images/reconcile/parse-json-1.png"&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;h4 id="company-number"&gt;Company number&lt;/h4&gt;
&lt;p&gt;Adding a company number is slightly more complicated. This is because the &lt;code&gt;company_number&lt;/code&gt;
field can contain multiple values (if a charity is linked with more than one company).
So the formula we'll use in this instance is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;parseJson(value)[&amp;quot;company_number&amp;quot;][0][&amp;quot;number&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;[0]&lt;/code&gt; part selects the first value within the list of values of &lt;code&gt;company_number&lt;/code&gt;, and
then &lt;code&gt;["number"]&lt;/code&gt; selects the company number within that.&lt;/p&gt;
&lt;h3 id="3-save-the-data"&gt;3. Save the data&lt;/h3&gt;
&lt;p&gt;While OpenRefine is useful for this kind of data cleaning and linking, you'll want to 
export the data to another programme to perform analysis. You can do this using the 
&lt;code&gt;Export&lt;/code&gt; menu found in the top right hand corner. The default formats are pretty
straightforward, and it's possible to create more sophisticated exports (including a JSON
export) using the &lt;code&gt;Custom tabular exporter...&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;One thing to remember with export - it will use any active filters when exporting, so make
sure you don't have restrictive filters that exclude data you actually need.&lt;/p&gt;
&lt;h3 id="4-optional-using-charity-base"&gt;4. Optional - using Charity Base&lt;/h3&gt;
&lt;p&gt;The data found on findthatcharity.uk is minimal as it is only included to support the site's
main purpose of being a search engine. If there are other details you need then you may need
to look for other data sources.&lt;/p&gt;
&lt;p&gt;A good place to look is &lt;a href="https://charitybase.uk/"&gt;CharityBase&lt;/a&gt; which has more detailed data
extracted from the Charity Commission.&lt;/p&gt;
&lt;p&gt;A sample formula for getting a CharityBase URL for extracting data might look like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s"&gt;&amp;quot;https://charitybase.uk/api/v0.2.0/charities?subNumber=0&amp;amp;charityNumber=&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;amp;fields=mainCharity.income,registration,beta.people.employees&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(Note that you need to specify the fields you want to return - here we're looking for the 
number of employees).&lt;/p&gt;
&lt;p&gt;And the sample formula for parsing the resulting JSON data might look like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;parseJson(value)[&amp;quot;charities&amp;quot;][0][&amp;quot;beta&amp;quot;][&amp;quot;people&amp;quot;][&amp;quot;employees&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Blog"></category><category term="Charities"></category><category term="findthatcharity"></category></entry><entry><title>Adding charity details using findthatcharity.uk - Part I</title><link href="https://dkane.net/2018/adding-charity-details-using-findthatcharityuk-part-i/" rel="alternate"></link><published>2018-03-26T13:25:00+01:00</published><updated>2018-03-26T13:25:00+01:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2018-03-26:/2018/adding-charity-details-using-findthatcharityuk-part-i/</id><summary type="html">&lt;h2 id="part-i-add-charity-numbers"&gt;Part I - add charity numbers&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="/2018/adding-charity-details-using-findthatcharity-part-ii/"&gt;See part II&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://findthatcharity.uk/"&gt;findthatcharity.uk&lt;/a&gt; is a site I've created to help access
data about charities. One of the ways you can use it is to add details about a list of
charities if you only know their names.&lt;/p&gt;
&lt;p&gt;This is often called "reconciliation" - turning â€¦&lt;/p&gt;</summary><content type="html">&lt;h2 id="part-i-add-charity-numbers"&gt;Part I - add charity numbers&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="/2018/adding-charity-details-using-findthatcharity-part-ii/"&gt;See part II&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://findthatcharity.uk/"&gt;findthatcharity.uk&lt;/a&gt; is a site I've created to help access
data about charities. One of the ways you can use it is to add details about a list of
charities if you only know their names.&lt;/p&gt;
&lt;p&gt;This is often called "reconciliation" - turning a list of names into something that 
unambiguously identifies the charity. Charities are often known by different names, or
have variations like "Ltd" rather than "Limited", so by adding charity numbers we can
make sure we're talking about the same charity whether we say "Comic Relief" or "Charity
Projects".&lt;/p&gt;
&lt;p&gt;In this post I'm going to show you how to use &lt;a href="http://openrefine.org/"&gt;OpenRefine&lt;/a&gt; 
and &lt;a href="https://findthatcharity.uk/"&gt;findthatcharity.uk&lt;/a&gt; to turn charity names into 
numbers. In the next part, I'll show how to use charity numbers to fetch extra information
about a charity - like their web address or latest income.&lt;/p&gt;
&lt;h3 id="1-get-open-refine"&gt;1. Get Open Refine&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://openrefine.org/"&gt;OpenRefine&lt;/a&gt; is a great data cleaning/wrangling tool. It was 
originally started by Google (and so is sometimes still called Google Refine), but 
is now run by a team of volunteer developers.&lt;/p&gt;
&lt;p&gt;You can find the download for your platform on the &lt;a href="http://openrefine.org/download.html"&gt;download page&lt;/a&gt;.
Note that if you're a Windows user you won't "install" it in the same way you might for
other programs - instead you extract the zip file into a directory and then run &lt;code&gt;refine.bat&lt;/code&gt;
from that directory.&lt;/p&gt;
&lt;p&gt;Again, OpenRefine might be a bit different from other programs you've seen in that it
doesn't open in it's own window - instead it has a "server" that runs in the background,
and you interact with it through a web browser. The address you visit (normally &lt;a href="http://localhost:3333"&gt;http://localhost:3333&lt;/a&gt;)
is only accessible through your computer though - other parts of the internet can't 
see it.&lt;/p&gt;
&lt;h3 id="2-load-your-data"&gt;2. Load your data&lt;/h3&gt;
&lt;p&gt;When you first open OpenRefine you'll see a page that looks a bit like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Web page screenshot showing the OpenRefine screen for importing data" src="/images/reconcile/first-screen.png"&gt; &lt;/p&gt;
&lt;p&gt;You can follow the instructions for importing your data. OpenRefine has some very
flexible options for importing data. The important thing about your data is that
it should be a "flat file" - a simple table with rows and columns. You might need
to use another program (like Excel) to get your data in this format first.&lt;/p&gt;
&lt;p&gt;I've chosen to use some data published by the &lt;a href="http://cheshirecommunityfoundation.org.uk/wp-content/uploads/2017/06/Grants-Awarded-Fiscal-Year-2016.xlsx"&gt;Cheshire Community Foundation [xlsx - 57Kb]&lt;/a&gt;
on the grants they've published. This data is published to the &lt;a href="https://www.threesixtygiving.org/"&gt;360 Giving grant data standard&lt;/a&gt;
and I found it in the &lt;a href="https://www.threesixtygiving.org/data/data-registry/"&gt;360 Giving data registry&lt;/a&gt;.
It already includes charity numbers so we wouldn't need to do this reconciliation
process, but it's useful to have them there to check how good the reconiliation
process is.&lt;/p&gt;
&lt;p&gt;I can point OpenRefine at this URL and it will download and load it itself. Here's what the
data looks like once it's been imported. I've hidden the &lt;code&gt;description&lt;/code&gt; field to get more
rows on the screen.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Data loaded into OpenRefine" src="/images/reconcile/data-ready.png"&gt;&lt;/p&gt;
&lt;h3 id="3-reconcile-charity-names"&gt;3. Reconcile charity names&lt;/h3&gt;
&lt;p&gt;We're going to be using the &lt;code&gt;Recipient Org:Name&lt;/code&gt; field to reconcile - this contains the
name of the organisation that received the grant. Click on the arrow next to the column
title to bring up the menu, and click &lt;code&gt;Reconcile &amp;gt; Start reconciling...&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Location of the reconcile menu" src="/images/reconcile/reconcile-menu.png"&gt;&lt;/p&gt;
&lt;p&gt;Now you need to add the Find that Charity reconciliation service. This is a web service
that will recieve data from OpenRefine (in this case the name of a charity) and tries
to match it to an entity. It returns a list of possible matches, and allows us to 
extract the ID of each match (in this case the charity number).&lt;/p&gt;
&lt;p&gt;Click &lt;code&gt;Add Standard Service...&lt;/code&gt; and then paste &lt;code&gt;https://findthatcharity.uk/reconcile&lt;/code&gt;
in the textbox, and click &lt;code&gt;Add Service&lt;/code&gt;. This will then (possibly after a short delay)
add a service called "charitysearch".&lt;/p&gt;
&lt;p&gt;&lt;img alt="Dialog box for adding a reconciliation service" src="/images/reconcile/add-service.png"&gt;&lt;/p&gt;
&lt;p&gt;You'll see a list with just "charity" on the left hand side (you might need to hide 
the sidebar). You can leave the default options (at the moment findthatcharity doesn't
take any additional properties to help matching, but this might be something we add 
later).&lt;/p&gt;
&lt;p&gt;Click &lt;code&gt;Start Reconciling&lt;/code&gt; to make the magic happen. This might take a while if you
have lots of records. OpenRefine will batch up charities and send a few at a time
to findthatcharity, but the server can only cope with so many requests at a time.
If you need to do lots of requests (&amp;gt;5,000 in one go), speak to me directly.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Completed options for running reconcilation" src="/images/reconcile/start-reconciling.png"&gt;&lt;/p&gt;
&lt;p&gt;You'll see a counter with the percentage complete at the top, and when finished each field will
show the matches that have been made. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Reconciliation results, showing a series of checkboxes for each entry with possible matches" src="/images/reconcile/reconcile-results.png"&gt;&lt;/p&gt;
&lt;h3 id="4-check-the-matches"&gt;4. Check the matches&lt;/h3&gt;
&lt;p&gt;You now need to check the matches. Depending on your time and the number of records, there's a
few options for this. &lt;/p&gt;
&lt;h4 id="manually-check-every-record"&gt;Manually check every record&lt;/h4&gt;
&lt;p&gt;You can manually check each record - just click on the single tick next to the correct match.
You can also click the box with two ticks if you'd like every instance of this record to be
matched to this entity.&lt;/p&gt;
&lt;h4 id="match-all-records-to-the-best-result"&gt;Match all records to the best result&lt;/h4&gt;
&lt;p&gt;If you trust the algorithm, or have done some manual checking and think they're all correct, you
can just take the best match for each record. To do this, click the arrow menu next to the 
&lt;code&gt;Recipient Org:Name&lt;/code&gt; column heading, and select &lt;code&gt;Reconcile &amp;gt; Actions &amp;gt; Match each cell to its best candidate&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id="filter-and-match"&gt;Filter and match&lt;/h4&gt;
&lt;p&gt;You can also combine these two approaches using filters. On the left hand side of the screen,
OpenRefine has added two "facets" based on the results of the reconciliation. &lt;/p&gt;
&lt;p&gt;The &lt;code&gt;judgement&lt;/code&gt; facet at the top shows the overall result - either &lt;code&gt;(blank)&lt;/code&gt; where no matches
have been found, &lt;code&gt;none&lt;/code&gt; where there are some matches or &lt;code&gt;matched&lt;/code&gt; where a single match has
been selected (some records are marked as &lt;code&gt;matched&lt;/code&gt; already if findthatcharity thinks they
are an exact match).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;best candidate's score&lt;/code&gt; facet shows the score of the best match candidate, and allows you
to select different numbers by dragging the range sliders. You can also remove &lt;code&gt;Error&lt;/code&gt; values:
these are the ones with no match.&lt;/p&gt;
&lt;p&gt;You can drag the score fact to select only those with high matching scores - this will filter
to show only those rows with the selected scores. The &lt;code&gt;Match each cell to its best candidate&lt;/code&gt;
action also respects this filter, so you can use that to match all the records found by the 
filter, with the remainder remaining unmatched.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Results of combining the score filter with matching each cell to best candidate" src="/images/reconcile/filtered-matches.png"&gt;&lt;/p&gt;
&lt;h3 id="5-add-charity-number"&gt;5. Add charity number&lt;/h3&gt;
&lt;p&gt;Once you're happy with the matches you can add a new column with the matched charity number in.
To do this, use the arrow menu next to the column heading, and click &lt;code&gt;Edit column &amp;gt; Add column based on this column...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The box that pops up allows you to specify lots of different columns. Add a name for your column
at the top ("Charity Number" would make sense), and then add &lt;code&gt;cell.recon.match.id&lt;/code&gt; in the "Expression"
box. This will look at the cell reconcilation object, and find the &lt;code&gt;id&lt;/code&gt; of the matched candidate.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Entering an expression for getting the matched cell id" src="/images/reconcile/add-charity-number.png"&gt;&lt;/p&gt;
&lt;p&gt;Press &lt;code&gt;OK&lt;/code&gt; to add this column.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;That's it for part one - hopefully you've now got a charity number for all the charities in 
your data. In &lt;a href="/2018/adding-charity-details-using-findthatcharity-part-ii/"&gt;the next part&lt;/a&gt; I'll take a look at using the charity number to add more details
about the charity, like it's web address or latest income.&lt;/p&gt;
&lt;p&gt;&lt;a href="/2018/adding-charity-details-using-findthatcharity-part-ii/"&gt;Part II continues here...&lt;/a&gt;&lt;/p&gt;</content><category term="Blog"></category><category term="Charities"></category><category term="findthatcharity"></category></entry><entry><title>Back in the GDPR</title><link href="https://dkane.net/2018/back-in-the-gdpr/" rel="alternate"></link><published>2018-03-01T13:25:00+00:00</published><updated>2018-03-01T13:25:00+00:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2018-03-01:/2018/back-in-the-gdpr/</id><summary type="html">&lt;p&gt;G-day (the 25 May) is fast approaching, when charities will need to be GDPR-compliant. While &lt;a href="https://www.thirdsector.co.uk/less-half-charities-heard-new-data-protection-rule/fundraising/article/1455490"&gt;half of charities apparently haven't heard of it&lt;/a&gt; there's no shortage of resources so I've put together &lt;a href="https://github.com/drkane/charity-gdpr-resources"&gt;a list of the resources I've seen produced&lt;/a&gt; on github.&lt;/p&gt;
&lt;p&gt;If you see anything missing then please add â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;G-day (the 25 May) is fast approaching, when charities will need to be GDPR-compliant. While &lt;a href="https://www.thirdsector.co.uk/less-half-charities-heard-new-data-protection-rule/fundraising/article/1455490"&gt;half of charities apparently haven't heard of it&lt;/a&gt; there's no shortage of resources so I've put together &lt;a href="https://github.com/drkane/charity-gdpr-resources"&gt;a list of the resources I've seen produced&lt;/a&gt; on github.&lt;/p&gt;
&lt;p&gt;If you see anything missing then please add an issue or make a pull request (or &lt;a href="https://twitter.com/kanedr"&gt;tweet me @kanedr&lt;/a&gt;) and I'll add it.&lt;/p&gt;
&lt;p&gt;My view on GDPR is that, as a consumer, it's a welcome rebalancing of data rights from organisations to individuals, and I think organisations can embrace it positively to think better about how they handle data about their clients, staff, donors and beneficiaries.&lt;/p&gt;
&lt;p&gt;With that in mind I'd highly recommend these resources by &lt;a href="https://projectsbyif.com/"&gt;IF&lt;/a&gt;. They show ways in which GDPR doesn't just have to be an annoyance that means you have to reword your forms, but instead something that can help you fundamentally rethink the way your users need you to handle their data.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://newdigitalrights.projectsbyif.com/"&gt;Designing for new Digital Rights&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="GDPR"></category><category term="Data Protection"></category></entry><entry><title>Names shared by genders</title><link href="https://dkane.net/2018/names-shared-by-genders/" rel="alternate"></link><published>2018-02-10T21:32:35+01:00</published><updated>2018-02-10T21:32:35+01:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2018-02-10:/2018/names-shared-by-genders/</id><summary type="html">&lt;p&gt;Building the gender classifier I've &lt;a href="/a-name-gender-classifier/"&gt;written about here&lt;/a&gt; got me interested
in ambiguous names - those that are shared by people of both genders.&lt;/p&gt;
&lt;p&gt;I realised I could use the list of male and female charity trustee names
I'd gathered to look into this in a bit more detail. Bearing in â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Building the gender classifier I've &lt;a href="/a-name-gender-classifier/"&gt;written about here&lt;/a&gt; got me interested
in ambiguous names - those that are shared by people of both genders.&lt;/p&gt;
&lt;p&gt;I realised I could use the list of male and female charity trustee names
I'd gathered to look into this in a bit more detail. Bearing in mind the
limitations and bias of the source dataset, I think it can generate some
insight.&lt;/p&gt;
&lt;p&gt;This blogpost was written as a juypter notebook, so it can be run to 
recreate the research. &lt;a href="https://github.com/"&gt;You can find the notebook code on github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We start by importing the libraries we need - two built-in python libraries
(&lt;code&gt;csv&lt;/code&gt; and &lt;code&gt;collections&lt;/code&gt;), &lt;code&gt;pandas&lt;/code&gt; for analysing the data and &lt;code&gt;matplotlib&lt;/code&gt;
for making charts.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To start, we go through all the names in our source data, and use the names with titles to find first names of males and females. To do this I've just taken the first word from the string, excluding the title, providing it's more than one character. This is fairly crude, and will be wrong in some cases (eg someone who uses two first names). But it should be good enough for our purposes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;extract_trustee.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# ignore rows that aren&amp;#39;t two records long&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# split the name by spaces&lt;/span&gt;
        &lt;span class="c1"&gt;# if there&amp;#39;s only one field then ignore the name&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="c1"&gt;# if the second name string (usually surname) is less that 2 characters ignore the row&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="c1"&gt;# if there are non-alpha characters (numbers, symbols) then ignore the row&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# get the first name (assuming name[0] is a title)&lt;/span&gt;
        &lt;span class="c1"&gt;# if the first word is one of these titles it&amp;#39;s a female name&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;miss&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mrs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ms&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dame&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="c1"&gt;# if the first word is one of these titles it&amp;#39;s a male name&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lets check the female and male names to check we're on the right track.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[&amp;#39;Felicity&amp;#39;, &amp;#39;Tessa&amp;#39;, &amp;#39;Elizabeth&amp;#39;, &amp;#39;Julie&amp;#39;, &amp;#39;Rosemary&amp;#39;, &amp;#39;Catherine&amp;#39;, &amp;#39;Eileen&amp;#39;, &amp;#39;Christa&amp;#39;, &amp;#39;Roberta&amp;#39;, &amp;#39;Beverley&amp;#39;]&lt;/span&gt;
&lt;span class="k"&gt;[&amp;#39;Oliver&amp;#39;, &amp;#39;Kenneth&amp;#39;, &amp;#39;Neil&amp;#39;, &amp;#39;Keith&amp;#39;, &amp;#39;John&amp;#39;, &amp;#39;Herschel&amp;#39;, &amp;#39;Alex&amp;#39;, &amp;#39;David&amp;#39;, &amp;#39;Christopher&amp;#39;, &amp;#39;Daniel&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;female&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;male&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;female_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;female&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;male_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;male&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;all_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;female_names&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;male_names&lt;/span&gt;
&lt;span class="n"&gt;female_people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;female&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;span class="n"&gt;male_people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;male&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;span class="n"&gt;all_people&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;female_people&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;male_people&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Female: &lt;/span&gt;&lt;span class="si"&gt;{:,.0f}&lt;/span&gt;&lt;span class="s2"&gt; (from &lt;/span&gt;&lt;span class="si"&gt;{:,.0f}&lt;/span&gt;&lt;span class="s2"&gt; people)&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;female_names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;female_people&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Male: &lt;/span&gt;&lt;span class="si"&gt;{:,.0f}&lt;/span&gt;&lt;span class="s2"&gt; (from &lt;/span&gt;&lt;span class="si"&gt;{:,.0f}&lt;/span&gt;&lt;span class="s2"&gt; people)&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;male_names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;male_people&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{:,.1f}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;% o&lt;/span&gt;&lt;span class="s2"&gt;f names are female, &lt;/span&gt;&lt;span class="si"&gt;{:,.1f}&lt;/span&gt;&lt;span class="s2"&gt; of people in sample&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;female_names&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;all_names&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;female_people&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;all_people&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;weighting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;male_people&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;0.489&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;male_people&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;female_people&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Use a weighting of &lt;/span&gt;&lt;span class="si"&gt;{:,.3f}&lt;/span&gt;&lt;span class="s2"&gt; to bring female population to 51.1&lt;/span&gt;&lt;span class="si"&gt;% o&lt;/span&gt;&lt;span class="s2"&gt;f sample&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;weighting&lt;/span&gt;
&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# 100 = X + Y&lt;/span&gt;
&lt;span class="c1"&gt;# X = male&lt;/span&gt;
&lt;span class="c1"&gt;# Y = female&lt;/span&gt;
&lt;span class="c1"&gt;# Z = female weighted&lt;/span&gt;
&lt;span class="c1"&gt;# X / (X + Y) = 0.520&lt;/span&gt;
&lt;span class="c1"&gt;# X / (X + Z) = 0.489&lt;/span&gt;
&lt;span class="c1"&gt;# X = 0.489 * (X + Z)&lt;/span&gt;
&lt;span class="c1"&gt;# X / 0.489 = X + Z&lt;/span&gt;
&lt;span class="c1"&gt;# Z = (X / 0.489) - X&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Female&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;367&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;335&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;237&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Male&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;085&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;363&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;296&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;48.9&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;are&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;female&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;48.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;
&lt;span class="n"&gt;Use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;weighting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.132&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bring&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;female&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;population&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;51.1&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This gives us 15,367 female first names (from 335,000 people) and 
16,085 male ones (from 363,296 people). The only issue is that
the ratio is slightly off - 48.0% of our sample are female, compared to &lt;a href="https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland"&gt;51.1% of
the 18+ population in England and Wales&lt;/a&gt;.
So we can use a weighting of 1.132 to correct this when we use the counts.&lt;/p&gt;
&lt;p&gt;Next we work out the count of how many times each name appears for men and
women. To do this the data is put into panda dataframes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;female_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;female&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;female_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;male_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;male&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;male_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We then apply our weighting to the female figures to adjust for the
lower number in our sample.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;female_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;female_df&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;weighting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These dataframes are merged together, joining on the name, to give us a list of first names found in the dataset alongside the number of females and males found with that name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;both&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;female_df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;male_df&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;outer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;female_pc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;male_pc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can see a list of the top 10 most common first names in the dataset (only two female names make the list - even after applying our weighting).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;female_pc&lt;/th&gt;
      &lt;th&gt;male_pc&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;David&lt;/th&gt;
      &lt;td&gt;8.0&lt;/td&gt;
      &lt;td&gt;21480.0&lt;/td&gt;
      &lt;td&gt;21488.0&lt;/td&gt;
      &lt;td&gt;0.000372&lt;/td&gt;
      &lt;td&gt;0.999628&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;John&lt;/th&gt;
      &lt;td&gt;9.0&lt;/td&gt;
      &lt;td&gt;21155.0&lt;/td&gt;
      &lt;td&gt;21164.0&lt;/td&gt;
      &lt;td&gt;0.000425&lt;/td&gt;
      &lt;td&gt;0.999575&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Peter&lt;/th&gt;
      &lt;td&gt;6.0&lt;/td&gt;
      &lt;td&gt;12421.0&lt;/td&gt;
      &lt;td&gt;12427.0&lt;/td&gt;
      &lt;td&gt;0.000483&lt;/td&gt;
      &lt;td&gt;0.999517&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Michael&lt;/th&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;12021.0&lt;/td&gt;
      &lt;td&gt;12024.0&lt;/td&gt;
      &lt;td&gt;0.000250&lt;/td&gt;
      &lt;td&gt;0.999750&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Richard&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;9702.0&lt;/td&gt;
      &lt;td&gt;9703.0&lt;/td&gt;
      &lt;td&gt;0.000103&lt;/td&gt;
      &lt;td&gt;0.999897&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Susan&lt;/th&gt;
      &lt;td&gt;8872.0&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;8875.0&lt;/td&gt;
      &lt;td&gt;0.999662&lt;/td&gt;
      &lt;td&gt;0.000338&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Andrew&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;8746.0&lt;/td&gt;
      &lt;td&gt;8747.0&lt;/td&gt;
      &lt;td&gt;0.000114&lt;/td&gt;
      &lt;td&gt;0.999886&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Paul&lt;/th&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;8492.0&lt;/td&gt;
      &lt;td&gt;8495.0&lt;/td&gt;
      &lt;td&gt;0.000353&lt;/td&gt;
      &lt;td&gt;0.999647&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Robert&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;7879.0&lt;/td&gt;
      &lt;td&gt;7880.0&lt;/td&gt;
      &lt;td&gt;0.000127&lt;/td&gt;
      &lt;td&gt;0.999873&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Margaret&lt;/th&gt;
      &lt;td&gt;7866.0&lt;/td&gt;
      &lt;td&gt;5.0&lt;/td&gt;
      &lt;td&gt;7871.0&lt;/td&gt;
      &lt;td&gt;0.999365&lt;/td&gt;
      &lt;td&gt;0.000635&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;And a list of some of the least common - these names only appear once.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;female_pc&lt;/th&gt;
      &lt;th&gt;male_pc&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Jibola&lt;/th&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jibi&lt;/th&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jiba&lt;/th&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jiaokun&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jiann&lt;/th&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jianmin&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jiale&lt;/th&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jia&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jhumar&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Zyta&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id="shared-names"&gt;Shared names&lt;/h2&gt;
&lt;p&gt;We now move on to what we were trying to do - get a list of names that are commonly shared between people of different genders. You can see from the top 10s above that it's not a perfect dataset - some names that you might assume are unambiguously male or female have some counterparts - there are 8 female Davids, and 3 male Susans.&lt;/p&gt;
&lt;p&gt;This could be a mistake in the way the algorithm was applied, a typo in the data, or people who have an unusual name. But to look only at names we would expect to be more common, I've filtered to only show only names where more than 30 instances of both male and female people have the name. This threshold should also ensure we have a decent sample of people for each name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;shared&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;both&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;female_pc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;shared&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;23&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;female_pc&lt;/th&gt;
      &lt;th&gt;male_pc&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Jean&lt;/th&gt;
      &lt;td&gt;3787.0&lt;/td&gt;
      &lt;td&gt;50.0&lt;/td&gt;
      &lt;td&gt;3837.0&lt;/td&gt;
      &lt;td&gt;0.986969&lt;/td&gt;
      &lt;td&gt;0.013031&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Pat&lt;/th&gt;
      &lt;td&gt;1154.0&lt;/td&gt;
      &lt;td&gt;67.0&lt;/td&gt;
      &lt;td&gt;1221.0&lt;/td&gt;
      &lt;td&gt;0.945127&lt;/td&gt;
      &lt;td&gt;0.054873&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Kerry&lt;/th&gt;
      &lt;td&gt;530.0&lt;/td&gt;
      &lt;td&gt;45.0&lt;/td&gt;
      &lt;td&gt;575.0&lt;/td&gt;
      &lt;td&gt;0.921739&lt;/td&gt;
      &lt;td&gt;0.078261&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Lyn&lt;/th&gt;
      &lt;td&gt;337.0&lt;/td&gt;
      &lt;td&gt;36.0&lt;/td&gt;
      &lt;td&gt;373.0&lt;/td&gt;
      &lt;td&gt;0.903485&lt;/td&gt;
      &lt;td&gt;0.096515&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Kim&lt;/th&gt;
      &lt;td&gt;711.0&lt;/td&gt;
      &lt;td&gt;80.0&lt;/td&gt;
      &lt;td&gt;791.0&lt;/td&gt;
      &lt;td&gt;0.898862&lt;/td&gt;
      &lt;td&gt;0.101138&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jan&lt;/th&gt;
      &lt;td&gt;802.0&lt;/td&gt;
      &lt;td&gt;108.0&lt;/td&gt;
      &lt;td&gt;910.0&lt;/td&gt;
      &lt;td&gt;0.881319&lt;/td&gt;
      &lt;td&gt;0.118681&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Lindsay&lt;/th&gt;
      &lt;td&gt;347.0&lt;/td&gt;
      &lt;td&gt;62.0&lt;/td&gt;
      &lt;td&gt;409.0&lt;/td&gt;
      &lt;td&gt;0.848411&lt;/td&gt;
      &lt;td&gt;0.151589&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Sandy&lt;/th&gt;
      &lt;td&gt;126.0&lt;/td&gt;
      &lt;td&gt;42.0&lt;/td&gt;
      &lt;td&gt;168.0&lt;/td&gt;
      &lt;td&gt;0.750000&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Mel&lt;/th&gt;
      &lt;td&gt;62.0&lt;/td&gt;
      &lt;td&gt;54.0&lt;/td&gt;
      &lt;td&gt;116.0&lt;/td&gt;
      &lt;td&gt;0.534483&lt;/td&gt;
      &lt;td&gt;0.465517&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Vivian&lt;/th&gt;
      &lt;td&gt;87.0&lt;/td&gt;
      &lt;td&gt;79.0&lt;/td&gt;
      &lt;td&gt;166.0&lt;/td&gt;
      &lt;td&gt;0.524096&lt;/td&gt;
      &lt;td&gt;0.475904&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Leigh&lt;/th&gt;
      &lt;td&gt;88.0&lt;/td&gt;
      &lt;td&gt;92.0&lt;/td&gt;
      &lt;td&gt;180.0&lt;/td&gt;
      &lt;td&gt;0.488889&lt;/td&gt;
      &lt;td&gt;0.511111&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jose&lt;/th&gt;
      &lt;td&gt;43.0&lt;/td&gt;
      &lt;td&gt;60.0&lt;/td&gt;
      &lt;td&gt;103.0&lt;/td&gt;
      &lt;td&gt;0.417476&lt;/td&gt;
      &lt;td&gt;0.582524&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Sam&lt;/th&gt;
      &lt;td&gt;215.0&lt;/td&gt;
      &lt;td&gt;340.0&lt;/td&gt;
      &lt;td&gt;555.0&lt;/td&gt;
      &lt;td&gt;0.387387&lt;/td&gt;
      &lt;td&gt;0.612613&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Laurie&lt;/th&gt;
      &lt;td&gt;32.0&lt;/td&gt;
      &lt;td&gt;71.0&lt;/td&gt;
      &lt;td&gt;103.0&lt;/td&gt;
      &lt;td&gt;0.310680&lt;/td&gt;
      &lt;td&gt;0.689320&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Alex&lt;/th&gt;
      &lt;td&gt;177.0&lt;/td&gt;
      &lt;td&gt;506.0&lt;/td&gt;
      &lt;td&gt;683.0&lt;/td&gt;
      &lt;td&gt;0.259151&lt;/td&gt;
      &lt;td&gt;0.740849&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Chris&lt;/th&gt;
      &lt;td&gt;419.0&lt;/td&gt;
      &lt;td&gt;1856.0&lt;/td&gt;
      &lt;td&gt;2275.0&lt;/td&gt;
      &lt;td&gt;0.184176&lt;/td&gt;
      &lt;td&gt;0.815824&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Ali&lt;/th&gt;
      &lt;td&gt;52.0&lt;/td&gt;
      &lt;td&gt;268.0&lt;/td&gt;
      &lt;td&gt;320.0&lt;/td&gt;
      &lt;td&gt;0.162500&lt;/td&gt;
      &lt;td&gt;0.837500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Lee&lt;/th&gt;
      &lt;td&gt;92.0&lt;/td&gt;
      &lt;td&gt;524.0&lt;/td&gt;
      &lt;td&gt;616.0&lt;/td&gt;
      &lt;td&gt;0.149351&lt;/td&gt;
      &lt;td&gt;0.850649&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Ashley&lt;/th&gt;
      &lt;td&gt;43.0&lt;/td&gt;
      &lt;td&gt;257.0&lt;/td&gt;
      &lt;td&gt;300.0&lt;/td&gt;
      &lt;td&gt;0.143333&lt;/td&gt;
      &lt;td&gt;0.856667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Leslie&lt;/th&gt;
      &lt;td&gt;78.0&lt;/td&gt;
      &lt;td&gt;729.0&lt;/td&gt;
      &lt;td&gt;807.0&lt;/td&gt;
      &lt;td&gt;0.096654&lt;/td&gt;
      &lt;td&gt;0.903346&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Francis&lt;/th&gt;
      &lt;td&gt;51.0&lt;/td&gt;
      &lt;td&gt;533.0&lt;/td&gt;
      &lt;td&gt;584.0&lt;/td&gt;
      &lt;td&gt;0.087329&lt;/td&gt;
      &lt;td&gt;0.912671&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Terry&lt;/th&gt;
      &lt;td&gt;54.0&lt;/td&gt;
      &lt;td&gt;973.0&lt;/td&gt;
      &lt;td&gt;1027.0&lt;/td&gt;
      &lt;td&gt;0.052580&lt;/td&gt;
      &lt;td&gt;0.947420&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Robin&lt;/th&gt;
      &lt;td&gt;36.0&lt;/td&gt;
      &lt;td&gt;1438.0&lt;/td&gt;
      &lt;td&gt;1474.0&lt;/td&gt;
      &lt;td&gt;0.024423&lt;/td&gt;
      &lt;td&gt;0.975577&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This identifies 23 names meeting our criteria. They range from Jean (97% female), to Robin (98% male). But the most interesting names come in the middle. The closest to a 50-50 split are Leigh (49% female), Vivian (52% female) and Mel (53% female). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;shared&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;female_pc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;male_pc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;barh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacked&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x23fe0924e80&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="png" src="/images/output_20_1.png"&gt;&lt;/p&gt;
&lt;p&gt;Charting the data gives us a few clusters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Names that are mostly female, but with some male use: &lt;strong&gt;Jean, Pat, Kerry, Lyn, Kim, Jan, Lindsay&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Names that are pretty close to 50-50: &lt;strong&gt;Mel, Vivian, Leigh, Jose, Sam&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Names that are mostly male, but with some female use: &lt;strong&gt;Alex, Chris, Ali, Lee, Ashley, Leslie, Terry, Robin&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category></entry><entry><title>A name gender classifier</title><link href="https://dkane.net/2018/a-name-gender-classifier/" rel="alternate"></link><published>2018-02-10T21:19:35+01:00</published><updated>2018-02-10T21:19:35+01:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2018-02-10:/2018/a-name-gender-classifier/</id><summary type="html">&lt;p&gt;Something I've needed to do a couple of times is take a long list of names and
classify them into male and female. For example, I've looked at lists of people
who attended events to see whether they were reaching more men or women - this
then helps target future events â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Something I've needed to do a couple of times is take a long list of names and
classify them into male and female. For example, I've looked at lists of people
who attended events to see whether they were reaching more men or women - this
then helps target future events.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: there are lots of reasons why this is a terrible idea. For a start, gender
is more complicated than male/female, and there are lots of reasons why a name is
a bad guide to someone's gender (&lt;a href="http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/"&gt;and other things programmers wrongly believe about
names&lt;/a&gt;). 
But I've justified it here on the basis that I'm not interested in getting
100% of the genders exactly right, but instead to get a general idea of a split in
a population.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a good place to use a naÃ¯ve Bayesian classifier. The best example of this
technique is a spam classifier - this will work out whether an email is spam, based
on comparing it to a model generated from a training data set. The "naÃ¯ve" part
comes from the fact that it's simply based on words that appear in the training
data set, without considering the meaning of or connections between those words.&lt;/p&gt;
&lt;p&gt;To do this I'm going to use python (3.6 to be exact) and the &lt;a href="http://scikit-learn.org/stable/"&gt;scikit&lt;/a&gt;
library which has a naÃ¯ve Bayesian classifier built in. It's based on the tutorial
found here.&lt;/p&gt;
&lt;h2 id="step-1-get-some-training-data"&gt;Step 1 - get some training data&lt;/h2&gt;
&lt;p&gt;The training data needs to be a list of names with their genders. I've found this a
tricky thing to come by, but luckily my work with the 
&lt;a href="http://data.charitycommission.gov.uk/"&gt;Charity Commission Register of Charities&lt;/a&gt;
throws up a good source.&lt;/p&gt;
&lt;p&gt;The large data extract they publish, under an open license, contains a list of
trustees for each charity. It's just a list of names - they hold information like
address, date of birth, etc but don't publish it for data protection reasons - but
it's possible to work out the gender of a proportion of the names.&lt;/p&gt;
&lt;p&gt;Out of the X,000 names, X,000 (X%) include a title (Mrs, Miss, Ms, Mr). Using those
four titles which are gender specific and cover X% of titles used. I wrote a python
script to parse the name CSV file, look for names that start with Mr, Mrs, etc and
put them into a male list or female list. This produces lists of X male names and
X female names.&lt;/p&gt;
&lt;p&gt;A couple of notes here. Like any training data set, this is not unbiased. Charity
trustees represent a particular slice of the population - people from all walks of
life are trustees, but the average trustee is older, whiter and richer than the
average person. So the names we're using are going to reflect those demographics.&lt;/p&gt;
&lt;p&gt;Note too that I'm not doing anything to separate out first names and last names -
I'm just using the whole string. This means that last names will be included in
the model - with the hope that they'll be equally distributed and so won't make
a difference to the final total. But this isn't a guarantee.&lt;/p&gt;
&lt;h2 id="step-2-training-the-model"&gt;Step 2: training the model&lt;/h2&gt;
&lt;h2 id="step-3-testing-the-model"&gt;Step 3: testing the model&lt;/h2&gt;
&lt;h2 id="step-4-using-the-model"&gt;Step 4: using the model&lt;/h2&gt;</content><category term="Blog"></category></entry><entry><title>Twitter bot â€“ random charity</title><link href="https://dkane.net/2016/twitter-bot-random-charity/" rel="alternate"></link><published>2016-10-16T10:20:00+01:00</published><updated>2016-10-16T10:20:00+01:00</updated><author><name>David Kane</name></author><id>tag:dkane.net,2016-10-16:/2016/twitter-bot-random-charity/</id><summary type="html">&lt;p&gt;Iâ€™ve been playing about with twitter bots, and following &lt;a href="https://videlais.com/2015/03/02/how-to-create-a-basic-twitterbot-in-python/"&gt;some instructions on using the twitter API in python&lt;/a&gt;, Iâ€™ve created a bot that tweets a link to a random charity every half an hour.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/drkane/random-charity-bot"&gt;code and more details on the bot can be found on github&lt;/a&gt;. From â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Iâ€™ve been playing about with twitter bots, and following &lt;a href="https://videlais.com/2015/03/02/how-to-create-a-basic-twitterbot-in-python/"&gt;some instructions on using the twitter API in python&lt;/a&gt;, Iâ€™ve created a bot that tweets a link to a random charity every half an hour.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/drkane/random-charity-bot"&gt;code and more details on the bot can be found on github&lt;/a&gt;. From the readme:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Twitter bot that tweets the name and website of a random charity. The data is based on the register held by the Charity Commission for England and Wales, &lt;a href="http://data.charitycommission.gov.uk/"&gt;released as open data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The bot randomly selects an active charity from the register, and tweets it. If the website of the charity is known it tweets that too, otherwise it gives a link to the official register entry for that charity.&lt;/p&gt;
&lt;p&gt;This bot isnâ€™t affiliated with the Charity Commission, and gives no endorsement of the charities tweeted.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Credit due to the following places:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fetch charity data script adapted from &lt;a href="https://github.com/OpenDataServices/grantnav/blob/master/dataload/fetch_charity_data.py"&gt;https://github.com/OpenDataServices/grantnav/blob/master/dataload/fetch_charity_data.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter API use from &lt;a href="https://videlais.com/2015/03/02/how-to-create-a-basic-twitterbot-in-python/"&gt;https://videlais.com/2015/03/02/how-to-create-a-basic-twitterbot-in-python/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Charity data from &lt;a href="http://data.charitycommission.gov.uk/"&gt;http://data.charitycommission.gov.uk/&lt;/a&gt; â€“ used under Open Government Licence v3.0&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category></entry></feed>